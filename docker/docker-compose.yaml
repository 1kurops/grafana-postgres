version: '3.7'

services:
  postgresql:
    image: postgres:14
    container_name: postgresql
    restart: unless-stopped
    volumes:
      - './data/db:/var/lib/postgresql/data'
    ports:
      - '127.0.0.1:5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: superstrongpassword
      POSTGRES_DB: postgres
    networks:
      monitoring:


  grafana:
    image: grafana/grafana:10.0.3-ubuntu
    container_name: grafana
    restart: unless-stopped
    links:
      - postgresql
    volumes:
      - './configs/grafana/grafana.ini:/etc/grafana/grafana.ini:ro'
      - './configs/grafana/dashboards/postgres_connections.json:/etc/grafana/provisioning/dashboards/postgres_connections.json:rw'
      - './configs/grafana/datasources/postgres.yaml:/etc/grafana/provisioning/datasources/postgres.yaml:ro'
    ports:
      - '127.0.0.1:3000:3000'
    networks:
      monitoring:


  # nginx:
  #   image: nginx
  #   container_name: nginx
  #   restart: unless-stopped
  #   depends_on:
  #     - grafana
  #     - postgresql
  #   volumes:
  #     - './configs/nginx/nginx.conf:/etc/nginx/nginx.conf'
  #     - './configs/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf'
  #   ports:
  #     - '80:80'
  #   networks:
  #     monitoring:


networks:
  monitoring:
    driver: bridge
